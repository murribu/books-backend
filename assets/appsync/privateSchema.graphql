type Ban {
  PK: String
  SK: String
  GSI1PK: String
  GSI1SK: String
  title: String
  bookId: String
  author: String
  links: String
  createdBy: String
  createdAt: String
}

type Book {
  title: String
  author: String
  id: String
  link: String
  count: Int
}

input CreateBanInput {
  bookId: String
  whenBanned: String
  leaId: String
  leaName: String
  banTypeId: String
  links: String
}

input CreateBookInput {
  title: String
  author: String
  link: String
}

type DbBan {
  PK: String
  SK: String
  GSI1PK: String
  GSI1SK: String
  title: String
  bookId: String
  author: String
  leaName: String
  banTypeId: String
  links: String
  createdBy: String
  createdAt: String
}

type DbBook {
  PK: String
  SK: String
  GSI1PK: String
  GSI1SK: String
  title: String
  author: String
  link: String
  createdBy: String
  createdAt: String
}

input GetBookInput {
  id: String
}

type BanType {
  name: String
  id: String
  score: Int
}

type GetOmniReturn {
  PK: String
  SK: String
  tags: [String]
  books: [Book]
  leas: [Lea]
  banTypes: [BanType]
}

type Lea {
  name: String
  id: String
  county: String
  score: Int
}

input CreateBanTypeInput {
  name: String
  id: String
  score: Int
}

input DeleteBanInput {
  bookId: String
  whenBanned: String
  leaId: String
}

input UpdateBanInput {
  bookId: String
  whenBanned: String
  leaId: String
  links: String
}

input GetBansByLeaInput {
  leaId: String
}

input GetBansByBookIdInput {
  bookId: String
}

type Mutation {
  createBan(createBanInput: CreateBanInput): DbBan
  createBook(createBookInput: CreateBookInput): DbBook
  createBanType(createBanTypeInput: CreateBanTypeInput): GetOmniReturn
  deleteBan(deleteBanInput: DeleteBanInput): DbBan
  updateBan(updateBanInput: UpdateBanInput): DbBan
}

type Query {
  getOmni: GetOmniReturn
  getBook(getBookInput: GetBookInput): DbBook
  getAllBans: [DbBan]
  getBansByLea(getBansByLeaInput: GetBansByLeaInput): [DbBan]
  getBansByBookId(getBansByBookIdInput: GetBansByBookIdInput): [DbBan]
}

schema {
  query: Query
  mutation: Mutation
}
